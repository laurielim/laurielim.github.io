.card-container {
	column-gap: 1.2rem;
	display: grid;

	@media screen and (min-width: $medium) {
		grid-template-columns: 1fr 1fr;
	}
}

.card {
	background-color: #211e1c;
	background-color: var(--text-color);
	border-radius: 2px;
	/* Generated using https://shadows.brumm.af/, recommended by Josh W Comeau*/
	box-shadow:
  0px 1.8px 3.6px rgba(0, 0, 0, 0.052),
  0px 5px 10px rgba(0, 0, 0, 0.075),
  0px 12.1px 24.1px rgba(0, 0, 0, 0.098),
  0px 40px 80px rgba(0, 0, 0, 0.15);
	color: #f8f6f1;
	color: var(--background);
	display: grid;
	padding: $spacing-extra-large 8%;
	place-content: center;
	position: relative;
	transition: all .4s;
	width: 100%;

	@media screen and (min-width: $medium) {
		min-height: 350px;
		padding: $spacing-large 8%;
		padding-top: $spacing-extra-large;
		text-align: center;
	}

	&:hover {
		box-shadow:
		0px 1.9px 2.8px rgba(0, 0, 0, 0.042),
		0px 4.7px 6.7px rgba(0, 0, 0, 0.061),
		0px 8.8px 12.5px rgba(0, 0, 0, 0.075),
		0px 15.6px 22.3px rgba(0, 0, 0, 0.089),
		0px 29.2px 41.8px rgba(0, 0, 0, 0.108),
		0px 70px 100px rgba(0, 0, 0, 0.15);
		transform: scale(1.03);
		transition: all .25s;
		z-index: 100;
	}

  // Every 3rd starting from 1
	&:nth-of-type(3n-2) {
		@media screen and (min-width: $medium) {
			grid-column: span 2;
		}
	}
	 // Every 3rd starting from 2
	&:nth-of-type(3n-1) {
		background-color: var(--card-color-1);
		color: var(--color-dark);
	}
	 // Every 3rd starting from 3
	&:nth-of-type(3n) {
		background-color: var(--card-color-2);
		color: var(--color-light);
	}

  // If there is only 2 cards
	&:first-child:nth-last-child(2),
  &:first-child:nth-last-child(2) ~ .card {
		@media screen and (min-width: $medium) {
			grid-column: initial;
			margin-top: 0;
		}
  }

	&__summary {
		margin-top: 0;
	}

	&__link {
		background-color: var(--color-light);
		background-color: var(--accent-color);
		border: 1px solid;
		border-radius: 2px;
		color: var(--background);
		display: block;
		padding: $spacing-small $spacing;
		position: static;
		text-decoration: none;
		text-transform: capitalize;
		width: fit-content;

		@media screen and (min-width: $medium) {
			margin: $spacing auto;
			width: 12rem;
		}

		&::before {
			content: "";
			cursor: pointer;
			display: block;
			height: 100%;
			left: 0;
			position: absolute;
			top: 0;
			width: 100%;
		}

		&:hover {
			opacity: 1;
		}

		&:focus {
			outline: none;
		}

		&:hover,
		&:focus {
			&::before {
				outline: 5px dashed var(--accent-color);
				outline-offset: -0.8rem;
			}
		}
	}

	&__icon {
		.icon {
			fill: var(--background);
			height: var(--step-0);
			margin: 0;
			position: relative;
			width: var(--step-0);

			&.external {
				bottom: -2px;
			}

			&.internal {
				bottom: -4px;
			}
		}
	}
}

